import*as cherry_core from"cherry-cljs/cljs.core.js";import*as cherry from"cherry-cljs/lib/compiler.js";import"preact/debug";import*as pprint from"cherry-cljs/lib/cljs.pprint.js";import*as transit from"rpub.lib.transit";var cherry_state=cherry_core.atom.call(null,null),cherry_opts={repl:!0,async:!0,context:"return","elide-exports":!0},eval_cherry_string=function(state_atom,s){const st1=cherry.compileStringEx.call(null,s,cherry_opts,cherry_core.deref.call(null,cherry_state)),code2=cherry_core.str.call(null,`(async function() {
`,st1.javascript,`
})()`),ret3=eval(code2);return cherry_core.reset_BANG_.call(null,state_atom,st1),ret3},eval_cherry=function(l){const o=cherry_core.truth_.call(null,cherry_core.string_QMARK_.call(null,l))?l:cherry_core.pr_str.call(null,l);return eval_cherry_string.call(null,cherry_state,o)},start_websocket_client_BANG_=function(l){const o=l,c=cherry_core.__destructure_map.call(null,o),a=cherry_core.get.call(null,c,cherry_core.keyword("url")),y=cherry_core.get.call(null,c,cherry_core.keyword("on-open")),n=cherry_core.get.call(null,c,cherry_core.keyword("on-close")),_=cherry_core.get.call(null,c,cherry_core.keyword("on-error")),t=cherry_core.get.call(null,c,cherry_core.keyword("on-message")),r=new WebSocket(a);return r.onmessage=function(e){return t.call(null,r,e.data)},r.onopen=function(){if(cherry_core.truth_.call(null,y))return y.call(null,r)},r.onclose=function(){if(cherry_core.truth_.call(null,n))return n.call(null,r)},r.onerror=function(e){if(cherry_core.truth_.call(null,_))return _.call(null,r,e)}},handle_ws_open=function(){return cherry_core.println.call(null,"[cljs] WebSocket opened")},handle_ws_close=function(){return cherry_core.println.call(null,"[cljs] WebSocket closed")},handle_ws_error=function(l){return console.log(l)},handle_ws_message=function(l,o){const c=transit.read.call(null,o),a=cherry_core.__destructure_map.call(null,c),y=cherry_core.get.call(null,a,cherry_core.keyword("id")),n=cherry_core.get.call(null,a,cherry_core.keyword("code")),_=function(e){const u=(()=>{const h=cherry_core.atom.call(null,""),d=cherry_core._STAR_print_fn_STAR_;try{cherry_core.set_print_fn_BANG_.call(null,function(m){return cherry_core.swap_BANG_.call(null,h,cherry_core.str,m)}),pprint.pprint.call(null,e)}finally{cherry_core.set_print_fn_BANG_.call(null,d)}return cherry_core.deref.call(null,h)})(),i=cherry_core.array_map(cherry_core.keyword("id"),y,cherry_core.keyword("value"),cherry_core.pr_str.call(null,e));return cherry_core.println.call(null,cherry_core.str.call(null,"[cljs] => ",n,`
`,u)),l.send(transit.write.call(null,i))},t=function(e){return _.call(null,cherry_core.array_map(cherry_core.keyword("error/message"),cherry_core.str.call(null,e),cherry_core.keyword("error/stack"),e.stack)),console.log(e)},r=eval_cherry.call(null,n);return r.then(_,t),r},init_repl_BANG_=function(){return cherry_core.println.call(null,"[cljs] REPL started"),window.evalCherry=eval_cherry,start_websocket_client_BANG_.call(null,cherry_core.array_map(cherry_core.keyword("url"),"ws://localhost:7778",cherry_core.keyword("on-open"),handle_ws_open,cherry_core.keyword("on-close"),handle_ws_close,cherry_core.keyword("on-error"),handle_ws_error,cherry_core.keyword("on-message"),handle_ws_message))},repl_init_commands=cherry_core.list(cherry_core.symbol.call(null,"do"),cherry_core.list(cherry_core.symbol.call(null,"ns"),cherry_core.symbol.call(null,"rpub.dev.cljs.repl"),cherry_core.list(cherry_core.keyword("require"),cherry_core.vector(cherry_core.symbol.call(null,"rpub.lib.tap"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"tap")),cherry_core.vector(cherry_core.symbol.call(null,"rpub.dev.cljs.client"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"client")),cherry_core.vector(cherry_core.symbol.call(null,"rpub.plugins.admin"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"admin")),cherry_core.vector(cherry_core.symbol.call(null,"rpub.lib.dag"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"dag")),cherry_core.vector(cherry_core.symbol.call(null,"rpub.dev.dag.viz"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"dag-viz")),cherry_core.vector(cherry_core.symbol.call(null,"rpub.dev.dag.viz.aliases"),cherry_core.keyword("as"),cherry_core.symbol.call(null,"dag-viz-aliases")))),cherry_core.list(cherry_core.symbol.call(null,"defonce"),cherry_core.symbol.call(null,"tap-fn"),cherry_core.list(cherry_core.symbol.call(null,"fn"),cherry_core.vector(cherry_core.symbol.call(null,"x")),cherry_core.list(cherry_core.symbol.call(null,"tap/remote-tap"),"/admin/api/tap",cherry_core.symbol.call(null,"x")))),cherry_core.list(cherry_core.symbol.call(null,"add-tap"),cherry_core.symbol.call(null,"tap-fn")),cherry_core.list(cherry_core.symbol.call(null,"client/init-repl!")),cherry_core.list(cherry_core.symbol.call(null,"dag/enable-assertions!")),cherry_core.list(cherry_core.symbol.call(null,"defn"),cherry_core.symbol.call(null,"prepend-element"),cherry_core.vector(cherry_core.array_map(cherry_core.keyword("keys"),cherry_core.vector(cherry_core.symbol.call(null,"page-id"),cherry_core.symbol.call(null,"dag")),cherry_core.keyword("as"),cherry_core.symbol.call(null,"_page-config"))),cherry_core.vector(cherry_core.symbol.call(null,"dag-viz/overlay"),cherry_core.array_map(cherry_core.keyword("storage-id"),cherry_core.symbol.call(null,"page-id"),cherry_core.keyword("aliases"),cherry_core.list(cherry_core.symbol.call(null,"get"),cherry_core.symbol.call(null,"dag-viz-aliases/default-aliases"),cherry_core.symbol.call(null,"page-id")),cherry_core.keyword("initial-nodes"),cherry_core.list(cherry_core.symbol.call(null,"dag-viz/initial-nodes"),cherry_core.symbol.call(null,"dag")),cherry_core.keyword("initial-edges"),cherry_core.list(cherry_core.symbol.call(null,"dag-viz/initial-edges"),cherry_core.symbol.call(null,"dag"))))),cherry_core.list(cherry_core.symbol.call(null,"admin/start!"),cherry_core.array_map(cherry_core.keyword("prepend-element"),cherry_core.symbol.call(null,"prepend-element"),cherry_core.keyword("tracing"),!1))),start_BANG_=function(){return eval_cherry.call(null,repl_init_commands)};export{cherry_opts,cherry_state,eval_cherry,eval_cherry_string,handle_ws_close,handle_ws_error,handle_ws_message,handle_ws_open,init_repl_BANG_,repl_init_commands,start_BANG_,start_websocket_client_BANG_};
