import*as l from"cherry-cljs/cljs.core.js";import*as s from"rpub.lib.transit";var b=function(_,i){const d=i,a=l.__destructure_map.call(null,d),y=a,w=l.get.call(null,a,l.keyword("anti-forgery-token")),o=l.get.call(null,a,l.keyword("body")),c=l.get.call(null,a,l.keyword("on-complete")),e=l.merge.call(null,l.array_map(l.keyword("format"),l.keyword("json")),y),u=(()=>{const n=l.keyword("format").call(null,e),t=l.truth_.call(null,l.keyword_QMARK_.call(null,n))?l.subs.call(null,l.str.call(null,n),1):null;switch(t){case"json":return"application/json";case"transit":return"application/transit+json";default:throw new Error(l.str.call(null,"No matching clause: ",t))}})(),k=l.array_map("X-CSRF-Token",w,"Accept",u,"Content-Type",u),m=function(n){const t=l.keyword("format").call(null,e),r=l.truth_.call(null,l.keyword_QMARK_.call(null,t))?l.subs.call(null,l.str.call(null,t),1):null;switch(r){case"json":return l.js__GT_clj.call(null,JSON.parse(n));case"transit":return s.read.call(null,n);default:throw new Error(l.str.call(null,"No matching clause: ",r))}},p=function(n){const t=l.keyword("format").call(null,e),r=l.truth_.call(null,l.keyword_QMARK_.call(null,t))?l.subs.call(null,l.str.call(null,t),1):null;switch(r){case"json":return JSON.stringify(l.clj__GT_js.call(null,n));case"transit":return s.write.call(null,n);default:throw new Error(l.str.call(null,"No matching clause: ",r))}},h=(()=>{const n=l.array_map(l.keyword("method"),l.keyword("post"),l.keyword("headers"),k);return l.truth_.call(null,o)?l.assoc.call(null,n,l.keyword("body"),p.call(null,o)):n})(),f=fetch(_,l.clj__GT_js.call(null,h));return l.truth_.call(null,c)&&f.then(function(n){return n.text()}).then(function(n){return c.call(null,m.call(null,n))},null).catch(function(n){return c.call(null,null,n)}),null};export{b as post};
