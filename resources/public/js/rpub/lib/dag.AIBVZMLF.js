import*as l from"cherry-cljs/cljs.core.js";import*as p from"rads.dependency";var $=function(n){const r=n,e=l.__destructure_map.call(null,r),c=l.get.call(null,e,l.keyword("rpub.lib.dag/nodes")),a=l.get.call(null,e,l.keyword("rpub.lib.dag/edges")),u=p.topo_sort.call(null,a);return l.into.call(null,l.array_map(),l.map.call(null,function(d){return l.vector(d,l.filter.call(null,p.transitive_dependents.call(null,a,d),u))},l.filter.call(null,function(d){return l.get_in.call(null,c,l.vector(d,l.keyword("push")))},p.nodes.call(null,a))))},y=function(n,r){return l.reduce.call(null,function(e,c){const a=c,u=l.nth.call(null,a,0,null),d=l.nth.call(null,a,1,null);return p.depend.call(null,e,d,u)},n,r)},m=function(n){const r=n,e=l.__destructure_map.call(null,r),c=l.get.call(null,e,l.keyword("nodes")),a=l.get.call(null,e,l.keyword("edges")),u=y.call(null,p.graph.call(null),a);return l.array_map(l.keyword("rpub.lib.dag/nodes"),c,l.keyword("rpub.lib.dag/edges"),u,l.keyword("rpub.lib.dag/values"),l.array_map(),l.keyword("rpub.lib.dag/dependents"),$.call(null,l.array_map(l.keyword("rpub.lib.dag/nodes"),c,l.keyword("rpub.lib.dag/edges"),u)))},b=function(n,r){const e=l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/nodes"),r,l.keyword("calc"))),c=l.assoc.call(null,l.keyword("rpub.lib.dag/acc").call(null,n),l.keyword("rpub.lib.dag/values"),l.keyword("rpub.lib.dag/values").call(null,n)),a=e.call(null,c);return l.assoc_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/values"),r),a)},k=(()=>{const n=function(r){switch(l.alength.call(null,arguments)){case 2:return n.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return n.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return n.cljs$core$IFn$_invoke$arity$2=function(r,e){return k.call(null,r,e,l.keyword("rpub.lib.dag/no-value"))},n.cljs$core$IFn$_invoke$arity$3=function(r,e,c){const a=l.get_in.call(null,r,l.vector(l.keyword("rpub.lib.dag/nodes"),e,l.keyword("push"))),u=l.get_in.call(null,r,l.vector(l.keyword("rpub.lib.dag/dependents"),e)),d=l.truth_.call(null,l._EQ_.call(null,c,l.keyword("rpub.lib.dag/no-value")))?l.update.call(null,r,l.keyword("rpub.lib.dag/acc"),a):l.update.call(null,r,l.keyword("rpub.lib.dag/acc"),a,c);return l.reduce.call(null,b,d,u)},n.cljs$lang$maxFixedArity=3,n})(),h=function(n,r,e,c){const a=y.call(null,l.keyword("rpub.lib.dag/edges").call(null,n),c),u=l.assoc.call(null,l.assoc_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/nodes"),r),e),l.keyword("rpub.lib.dag/edges"),a);return b.call(null,l.assoc.call(null,u,l.keyword("rpub.lib.dag/dependents"),$.call(null,u)),r)},I=function(n,r){const e=l.update.call(null,l.update.call(null,n,l.keyword("rpub.lib.dag/nodes"),l.dissoc,r),l.keyword("rpub.lib.dag/edges"),p.remove_all,r);return l.assoc.call(null,e,l.keyword("rpub.lib.dag/dependents"),$.call(null,e))},w=(()=>{const n=function(r){switch(l.alength.call(null,arguments)){case 2:return n.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return n.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return n.cljs$core$IFn$_invoke$arity$2=function(r,e){return w.call(null,r,e,l.comp.call(null))},n.cljs$core$IFn$_invoke$arity$3=function(r,e,c){const a=c.call(null,function(_,i){return e.call(null,i)}),u=function(_,i){const o=function(s){const t=l.array.call(null),v=l.alength.call(null,arguments);let g=0;for(;;){if(g<v){t.push(arguments[g]),g=g+1;continue}break}const f=0<l.alength.call(null,t)?new l.IndexedSeq(t.slice(0),0,null):null;return o.cljs$core$IFn$_invoke$arity$variadic(f)};return o.cljs$core$IFn$_invoke$arity$variadic=function(s){const t=l.apply.call(null,i,s);return a.call(null,null,l.array_map(l.keyword("key"),_,l.keyword("args"),s,l.keyword("ret"),t)),t},o.cljs$lang$maxFixedArity=0,o.cljs$lang$applyTo=function(s){return this.cljs$core$IFn$_invoke$arity$variadic(l.seq.call(null,s))},o},d=function(_,i){const o=i,s=l.truth_.call(null,l.keyword("calc").call(null,i))?l.update.call(null,o,l.keyword("calc"),function(t){return u.call(null,_,t)}):o;return l.truth_.call(null,l.keyword("push").call(null,i))?l.update.call(null,s,l.keyword("push"),function(t){return u.call(null,_,t)}):s};return l.update.call(null,r,l.keyword("rpub.lib.dag/nodes"),function(_){return l.into.call(null,l.array_map(),l.map.call(null,function(i){const o=i,s=l.nth.call(null,o,0,null),t=l.nth.call(null,o,1,null);return l.vector(s,d.call(null,s,t))},_))})},n.cljs$lang$maxFixedArity=3,n})();export{m as __GT_dag,y as add_edges,h as add_node,$ as dependents,k as push,b as recalculate,I as remove_node,w as wrap_tracing};
