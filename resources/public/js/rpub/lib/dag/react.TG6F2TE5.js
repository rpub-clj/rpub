import*as l from"cherry-cljs/cljs.core.js";import*as $ from"react";import{useCallback as h,createContext as w,useContext as b,useSyncExternalStore as y,useId as A}from"react";import*as f from"rpub.lib.dag";var m=w.call(null),k=function(n){return $.createElement.call(null,m.Provider,{value:l.array_map(l.keyword("dag-atom"),n["dag-atom"])},n.children)},p=function(n,o,a){return l.some.call(null,function(c){return l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/values"),c))!==l.get_in.call(null,o,l.vector(l.keyword("rpub.lib.dag/values"),c))},a)},g=function(n,o,a,c){return l.swap_BANG_.call(null,n,function(i){return l.reduce.call(null,function(u,r){if(l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,r))))return u;{const e=r,_=l.nth.call(null,e,0,null),d=l.nth.call(null,e,1,null),t=function(s){return l.get_in.call(null,u,l.vector(l.keyword("rpub.lib.dag/nodes"),_,l.keyword("calc"))).call(null,s,d)};return f.add_node.call(null,u,r,l.array_map(l.keyword("calc"),t),l.vector(l.vector(_,r)))}},i,a)}),l.add_watch.call(null,n,o,function(i,u,r,e){if(l.truth_.call(null,p.call(null,r,e,a)))return c.call(null)}),function(){return l.remove_watch.call(null,n,o),l.swap_BANG_.call(null,n,function(u){return l.reduce.call(null,function(r,e){return l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,e)))?r:f.remove_node.call(null,r,e)},u,a)})}},G=function(n){const o=b.call(null,m),a=l.__destructure_map.call(null,o),c=l.get.call(null,a,l.keyword("dag-atom")),i=A.call(null),u=function(t){return g.call(null,c,i,n,t)},r=function(){return l.deref.call(null,c)},e=y.call(null,u,r),_=l.select_keys.call(null,l.keyword("rpub.lib.dag/values").call(null,e),n),d=h.call(null,(()=>{const t=function(s){switch(l.alength.call(null,arguments)){case 1:return t.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return t.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return t.cljs$core$IFn$_invoke$arity$1=function(s){return l.swap_BANG_.call(null,c,f.push,s)},t.cljs$core$IFn$_invoke$arity$2=function(s,v){return l.swap_BANG_.call(null,c,f.push,s,v)},t.cljs$lang$maxFixedArity=2,t})(),[]);return l.vector(_,d)};export{k as DAGProvider,g as subscribe,p as updated_QMARK_,G as use_dag};
