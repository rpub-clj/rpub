import*as l from"cherry-cljs/cljs.core.js";import*as g from"react";import{useCallback as w,useContext as b,useSyncExternalStore as k,useId as A}from"react";import*as $ from"rpub.lib.dag";var m=g.createContext.call(null),I=function(n){return g.createElement.call(null,m.Provider,{value:l.array_map(l.keyword("dag-atom"),n["dag-atom"])},n.children)},p=function(n,e,c){return l.some.call(null,function(s){return l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/values"),s))!==l.get_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/values"),s))},c)},y=function(n,e,c,s){return l.swap_BANG_.call(null,n,function(u){return l.reduce.call(null,function(o,r){if(l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,r))))return o;{const a=r,_=l.nth.call(null,a,0,null),v=l.nth.call(null,a,1,null),f=function(t){return l.get_in.call(null,o,l.vector(l.keyword("rpub.lib.dag/nodes"),_,l.keyword("calc"))).call(null,t,v)};return $.add_node.call(null,o,r,l.array_map(l.keyword("calc"),f),l.vector(l.vector(_,r)))}},u,c)}),l.add_watch.call(null,n,e,function(u,o,r,a){if(l.truth_.call(null,p.call(null,r,a,c)))return s.call(null)}),function(){return l.remove_watch.call(null,n,e),l.swap_BANG_.call(null,n,function(o){return l.reduce.call(null,function(r,a){return l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,a)))?r:$.remove_node.call(null,r,a)},o,c)})}},h=(()=>{const n=function(e){switch(l.alength.call(null,arguments)){case 0:return n.cljs$core$IFn$_invoke$arity$0();case 1:return n.cljs$core$IFn$_invoke$arity$1(arguments[0]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return n.cljs$core$IFn$_invoke$arity$0=function(){return h.call(null,null)},n.cljs$core$IFn$_invoke$arity$1=function(e){const c=b.call(null,m),s=l.__destructure_map.call(null,c),u=l.get.call(null,s,l.keyword("dag-atom")),o=A.call(null),r=function(t){return y.call(null,u,o,e,t)},a=function(){return l.deref.call(null,u)},_=k.call(null,r,a),v=l.select_keys.call(null,l.keyword("rpub.lib.dag/values").call(null,_),e),f=w.call(null,(()=>{const t=function(i){switch(l.alength.call(null,arguments)){case 1:return t.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return t.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return t.cljs$core$IFn$_invoke$arity$1=function(i){return l.swap_BANG_.call(null,u,$.push,i),null},t.cljs$core$IFn$_invoke$arity$2=function(i,d){return l.swap_BANG_.call(null,u,$.push,i,d),null},t.cljs$lang$maxFixedArity=2,t})(),[]);return l.vector(v,f)},n.cljs$lang$maxFixedArity=1,n})();export{I as DAGProvider,y as subscribe,p as updated_QMARK_,h as use_dag};
