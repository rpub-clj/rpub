import*as l from"cherry-cljs/cljs.core.js";import*as d from"rads.dependency";var i=function(n){const e=n,r=l.__destructure_map.call(null,e),t=l.get.call(null,r,l.keyword("rpub.lib.dag/nodes")),a=l.get.call(null,r,l.keyword("rpub.lib.dag/edges")),u=d.topo_sort.call(null,a);return l.into.call(null,l.array_map(),l.map.call(null,function(c){return l.vector(c,l.filter.call(null,d.transitive_dependents.call(null,a,c),u))},l.filter.call(null,function(c){return l.get_in.call(null,t,l.vector(c,l.keyword("push")))},d.nodes.call(null,a))))},g=function(n,e){return l.reduce.call(null,function(r,t){const a=t,u=l.nth.call(null,a,0,null),c=l.nth.call(null,a,1,null);return d.depend.call(null,r,c,u)},n,e)},k=function(n){const e=n,r=l.__destructure_map.call(null,e),t=l.get.call(null,r,l.keyword("nodes")),a=l.get.call(null,r,l.keyword("edges")),u=g.call(null,d.graph.call(null),a);return l.array_map(l.keyword("rpub.lib.dag/nodes"),t,l.keyword("rpub.lib.dag/edges"),u,l.keyword("rpub.lib.dag/values"),l.array_map(),l.keyword("rpub.lib.dag/dependents"),i.call(null,l.array_map(l.keyword("rpub.lib.dag/nodes"),t,l.keyword("rpub.lib.dag/edges"),u)))},b=function(n,e){const r=l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/nodes"),e,l.keyword("calc"))),t=l.assoc.call(null,l.keyword("rpub.lib.dag/acc").call(null,n),l.keyword("rpub.lib.dag/values"),l.keyword("rpub.lib.dag/values").call(null,n)),a=r.call(null,t);return l.assoc_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/values"),e),a)},y=(()=>{const n=function(e){switch(l.alength.call(null,arguments)){case 2:return n.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return n.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return n.cljs$core$IFn$_invoke$arity$2=function(e,r){return y.call(null,e,r,l.keyword("rpub.lib.dag/no-value"))},n.cljs$core$IFn$_invoke$arity$3=function(e,r,t){const a=l.get_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/nodes"),r,l.keyword("push"))),u=l.get_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/dependents"),r)),c=l.truth_.call(null,l._EQ_.call(null,t,l.keyword("rpub.lib.dag/no-value")))?l.update.call(null,e,l.keyword("rpub.lib.dag/acc"),a):l.update.call(null,e,l.keyword("rpub.lib.dag/acc"),a,t);return l.reduce.call(null,b,c,u)},n.cljs$lang$maxFixedArity=3,n})(),$=function(n,e,r,t){const a=g.call(null,l.keyword("rpub.lib.dag/edges").call(null,n),t),u=l.assoc.call(null,l.assoc_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/nodes"),e),r),l.keyword("rpub.lib.dag/edges"),a);return b.call(null,l.assoc.call(null,u,l.keyword("rpub.lib.dag/dependents"),i.call(null,u)),e)},v=function(n,e){const r=l.update.call(null,l.update.call(null,n,l.keyword("rpub.lib.dag/nodes"),l.dissoc,e),l.keyword("rpub.lib.dag/edges"),d.remove_all,e);return l.assoc.call(null,r,l.keyword("rpub.lib.dag/dependents"),i.call(null,r))},f=function(n,e){const r=function(a,u){const c=function(s){const o=l.array.call(null),p=l.alength.call(null,arguments);let _=0;for(;;){if(_<p){o.push(arguments[_]),_=_+1;continue}break}const w=0<l.alength.call(null,o)?new l.IndexedSeq(o.slice(0),0,null):null;return c.cljs$core$IFn$_invoke$arity$variadic(w)};return c.cljs$core$IFn$_invoke$arity$variadic=function(s){const o=l.apply.call(null,u,s),p=l.array_map(l.keyword("key"),a,l.keyword("args"),s,l.keyword("ret"),o);return l.transduce.call(null,e,l.constantly.call(null,null),l.vector(p)),o},c.cljs$lang$maxFixedArity=0,c.cljs$lang$applyTo=function(s){return this.cljs$core$IFn$_invoke$arity$variadic(l.seq.call(null,s))},c},t=function(a,u){const c=u,s=l.truth_.call(null,l.keyword("calc").call(null,u))?l.update.call(null,c,l.keyword("calc"),function(o){return r.call(null,a,o)}):c;return l.truth_.call(null,l.keyword("push").call(null,u))?l.update.call(null,s,l.keyword("push"),function(o){return r.call(null,a,o)}):s};return l.update.call(null,n,l.keyword("rpub.lib.dag/nodes"),function(a){return l.into.call(null,l.array_map(),l.map.call(null,function(u){const c=u,s=l.nth.call(null,c,0,null),o=l.nth.call(null,c,1,null);return l.vector(s,t.call(null,s,o))},a))})};export{k as __GT_dag,g as add_edges,$ as add_node,i as dependents,y as push,b as recalculate,v as remove_node,f as wrap_tracing};
