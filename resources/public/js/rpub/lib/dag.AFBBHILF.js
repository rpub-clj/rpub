import*as l from"cherry-cljs/cljs.core.js";import*as o from"rads.dependency";var d=function(e){const n=e,r=l.__destructure_map.call(null,n),u=l.get.call(null,r,l.keyword("rpub.lib.dag/nodes")),a=l.get.call(null,r,l.keyword("rpub.lib.dag/edges")),c=o.topo_sort.call(null,a);return l.into.call(null,l.array_map(),l.map.call(null,function(t){return l.vector(t,l.filter.call(null,o.transitive_dependents.call(null,a,t),c))},l.filter.call(null,function(t){return l.get_in.call(null,u,l.vector(t,l.keyword("push")))},o.nodes.call(null,a))))},_=function(e,n){return l.reduce.call(null,function(r,u){const a=u,c=l.nth.call(null,a,0,null),t=l.nth.call(null,a,1,null);return o.depend.call(null,r,t,c)},e,n)},y=function(e){const n=e,r=l.__destructure_map.call(null,n),u=l.get.call(null,r,l.keyword("nodes")),a=l.get.call(null,r,l.keyword("edges")),c=_.call(null,o.graph.call(null),a);return l.array_map(l.keyword("rpub.lib.dag/nodes"),u,l.keyword("rpub.lib.dag/edges"),c,l.keyword("rpub.lib.dag/values"),l.array_map(),l.keyword("rpub.lib.dag/dependents"),d.call(null,l.array_map(l.keyword("rpub.lib.dag/nodes"),u,l.keyword("rpub.lib.dag/edges"),c)))},i=function(e,n){const r=l.get_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/nodes"),n,l.keyword("calc"))),u=l.assoc.call(null,l.keyword("rpub.lib.dag/acc").call(null,e),l.keyword("rpub.lib.dag/values"),l.keyword("rpub.lib.dag/values").call(null,e)),a=r.call(null,u);return l.assoc_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/values"),n),a)},p=(()=>{const e=function(n){switch(l.alength.call(null,arguments)){case 2:return e.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);case 3:return e.cljs$core$IFn$_invoke$arity$3(arguments[0],arguments[1],arguments[2]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return e.cljs$core$IFn$_invoke$arity$2=function(n,r){return p.call(null,n,r,l.keyword("rpub.lib.dag/no-value"))},e.cljs$core$IFn$_invoke$arity$3=function(n,r,u){const a=l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/nodes"),r,l.keyword("push"))),c=l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/dependents"),r)),t=l.truth_.call(null,l._EQ_.call(null,u,l.keyword("rpub.lib.dag/no-value")))?l.update.call(null,n,l.keyword("rpub.lib.dag/acc"),a):l.update.call(null,n,l.keyword("rpub.lib.dag/acc"),a,u);return l.reduce.call(null,i,t,c)},e.cljs$lang$maxFixedArity=3,e})(),w=function(e,n,r,u){const a=_.call(null,l.keyword("rpub.lib.dag/edges").call(null,e),u),c=l.assoc.call(null,l.assoc_in.call(null,e,l.vector(l.keyword("rpub.lib.dag/nodes"),n),r),l.keyword("rpub.lib.dag/edges"),a);return i.call(null,l.assoc.call(null,c,l.keyword("rpub.lib.dag/dependents"),d.call(null,c)),n)},k=function(e,n){const r=l.update.call(null,l.update.call(null,e,l.keyword("rpub.lib.dag/nodes"),l.dissoc,n),l.keyword("rpub.lib.dag/edges"),o.remove_all,n);return l.assoc.call(null,r,l.keyword("rpub.lib.dag/dependents"),d.call(null,r))},$=function(e){const n=function(u){const a=function(c){const t=l.array.call(null),g=l.alength.call(null,arguments);let s=0;for(;;){if(s<g){t.push(arguments[s]),s=s+1;continue}break}const b=0<l.alength.call(null,t)?new l.IndexedSeq(t.slice(0),0,null):null;return a.cljs$core$IFn$_invoke$arity$variadic(b)};return a.cljs$core$IFn$_invoke$arity$variadic=function(c){const t=l.apply.call(null,u,c);return l.prn.call(null,u,l.array_map(l.keyword("args"),c,l.keyword("ret"),t)),t},a.cljs$lang$maxFixedArity=0,a.cljs$lang$applyTo=function(c){return this.cljs$core$IFn$_invoke$arity$variadic(l.seq.call(null,c))},a},r=function(u){const a=u,c=l.truth_.call(null,l.keyword("calc").call(null,u))?l.update.call(null,a,l.keyword("calc"),n):a;return l.truth_.call(null,l.keyword("push").call(null,u))?l.update.call(null,c,l.keyword("push"),n):c};return l.update.call(null,e,l.keyword("rpub.lib.dag/nodes"),l.update_vals,r)};export{y as __GT_dag,_ as add_edges,w as add_node,$ as add_tracing,d as dependents,p as push,i as recalculate,k as remove_node};
