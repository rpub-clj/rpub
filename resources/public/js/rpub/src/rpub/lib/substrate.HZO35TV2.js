import*as n from"cherry-cljs/cljs.core.js";if(!(typeof a<"u"))var a=n.atom.call(null,null);var u=function(r){return n.reset_BANG_.call(null,a,r)},t=(()=>{const r=function(l){switch(n.alength.call(null,arguments)){case 1:return r.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return r.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error(n.str.call(null,"Invalid arity: ",n.alength.call(null,arguments)))}};return r.cljs$core$IFn$_invoke$arity$1=function(l){return t.call(null,n.deref.call(null,a),l)},r.cljs$core$IFn$_invoke$arity$2=function(l,e){return n.keyword("subscribe").call(null,l).call(null,l,e)},r.cljs$lang$maxFixedArity=2,r})(),c=(()=>{const r=function(l){switch(n.alength.call(null,arguments)){case 1:return r.cljs$core$IFn$_invoke$arity$1(arguments[0]);case 2:return r.cljs$core$IFn$_invoke$arity$2(arguments[0],arguments[1]);default:throw new Error(n.str.call(null,"Invalid arity: ",n.alength.call(null,arguments)))}};return r.cljs$core$IFn$_invoke$arity$1=function(l){return c.call(null,n.deref.call(null,a),l)},r.cljs$core$IFn$_invoke$arity$2=function(l,e){return n.keyword("dispatch").call(null,l).call(null,l,e)},r.cljs$lang$maxFixedArity=2,r})();export{c as dispatch,a as global,u as set_global_BANG_,t as subscribe};
