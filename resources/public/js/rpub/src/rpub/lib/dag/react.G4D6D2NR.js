import*as l from"cherry-cljs/cljs.core.js";import*as b from"react";import{useCallback as g,useContext as h,useSyncExternalStore as j,useId as x}from"react";import*as d from"rpub.lib.dag";var y=b.createContext.call(null),G=function(n){return b.createElement.call(null,y.Provider,{value:l.array_map(l.keyword("dag-atom"),n["dag-atom"])},n.children)},w=function(n,a,t){return l.some.call(null,function(u){return l.not_EQ_.call(null,l.get_in.call(null,n,l.vector(l.keyword("rpub.lib.dag/values"),u)),l.get_in.call(null,a,l.vector(l.keyword("rpub.lib.dag/values"),u)))},t)},k=function(n,a,t,u){return l.swap_BANG_.call(null,n,function(_){return l.reduce.call(null,function(o,r){if(l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,r))))return o;{const c=r,f=l.nth.call(null,c,0,null),p=l.nth.call(null,c,1,null),m=function(e){return l.get_in.call(null,o,l.vector(l.keyword("rpub.lib.dag/nodes"),f,l.keyword("calc"))).call(null,e,p)};return d.add_node.call(null,o,r,l.array_map(l.keyword("calc"),m),l.vector(l.vector(f,r)))}},_,t)}),l.add_watch.call(null,n,a,function(_,o,r,c){if(l.truth_.call(null,w.call(null,r,c,t)))return u.call(null)}),function(){return l.remove_watch.call(null,n,a),l.swap_BANG_.call(null,n,function(o){return l.reduce.call(null,function(r,c){return l.truth_.call(null,l.not.call(null,l.vector_QMARK_.call(null,c)))?r:d.remove_node.call(null,r,c)},o,t)})}},A=(()=>{const n=function(a){switch(l.alength.call(null,arguments)){case 0:return n.cljs$core$IFn$_invoke$arity$0();case 1:return n.cljs$core$IFn$_invoke$arity$1(arguments[0]);default:throw new Error(l.str.call(null,"Invalid arity: ",l.alength.call(null,arguments)))}};return n.cljs$core$IFn$_invoke$arity$0=function(){return A.call(null,null)},n.cljs$core$IFn$_invoke$arity$1=function(a){const t=h.call(null,y),u=l.__destructure_map.call(null,t),_=l.get.call(null,u,l.keyword("dag-atom")),o=x.call(null),r=g.call(null,function(e){return k.call(null,_,o,a,e)},[]),c=g.call(null,function(){return l.deref.call(null,_)},[]),f=j.call(null,r,c),p=l.select_keys.call(null,l.keyword("rpub.lib.dag/values").call(null,f),a),m=g.call(null,(()=>{const e=function(s){const i=l.array.call(null),v=l.alength.call(null,arguments);let $=0;for(;;){if($<v){i.push(arguments[$]),$=$+1;continue}break}const I=0<l.alength.call(null,i)?new l.IndexedSeq(i.slice(0),0,null):null;return e.cljs$core$IFn$_invoke$arity$variadic(I)};return e.cljs$core$IFn$_invoke$arity$variadic=function(s){const i=l.swap_BANG_.call(null,_,function(v){return l.truth_.call(null,d.assertions_enabled_QMARK_.call(null))&&d.assert_valid_node_keys.call(null,v,l.take.call(null,1,s)),l.apply.call(null,d.push,v,s)});return l.select_keys.call(null,l.keyword("rpub.lib.dag/values").call(null,i),a)},e.cljs$lang$maxFixedArity=0,e.cljs$lang$applyTo=function(s){return this.cljs$core$IFn$_invoke$arity$variadic(l.seq.call(null,s))},e})(),[]);return l.vector(p,m)},n.cljs$lang$maxFixedArity=1,n})(),F=function(n){const a=h.call(null,y),t=l.__destructure_map.call(null,a),u=l.get.call(null,t,l.keyword("dag-atom"));return g.call(null,function(){return l.select_keys.call(null,l.keyword("rpub.lib.dag/values").call(null,l.deref.call(null,u)),n)})};export{G as DAGProvider,k as subscribe,w as updated_QMARK_,A as use_dag,F as use_dag_values};
