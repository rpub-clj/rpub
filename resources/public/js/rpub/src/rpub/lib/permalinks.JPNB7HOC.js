import*as l from"cherry-cljs/cljs.core.js";import*as s from"cherry-cljs/lib/clojure.string.js";var _=function(r){return l.map.call(null,function(a){const t=a,u=l.nth.call(null,t,0,null),n=l.nth.call(null,t,1,null);return l.array_map(l.keyword("template"),u,l.keyword("name"),l.truth_.call(null,l.string_QMARK_.call(null,n))?n:l.keyword("name").call(null,n))},r)},p=function(r){return l.array_map(l.keyword("routes"),_.call(null,r))},m=function(r,a){return l.reduce.call(null,function(t,u){const n=u,e=l.nth.call(null,n,0,null),c=l.nth.call(null,n,1,null);return s.replace.call(null,s.replace.call(null,t,l.str.call(null,"{",l.name.call(null,e),"}"),c),l.str.call(null,e),c)},r,a)},y=function(r,a,t){const u=r,n=l.__destructure_map.call(null,u),e=l.get.call(null,n,l.keyword("routes")),c=l.some.call(null,function(o){if(l.truth_.call(null,l._EQ_.call(null,l.keyword("name").call(null,o),a)))return o},e);return l.merge.call(null,c,l.array_map(l.keyword("path"),m.call(null,l.keyword("template").call(null,c),t)))};export{y as match_by_name,m as resolve_path,p as router,_ as routes};
