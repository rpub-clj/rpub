import*as a from"cherry-cljs/cljs.core.js";import"preact/devtools";import*as u from"rpub.plugins.admin.dashboard-page";import*as r from"rpub.plugins.admin.impl";import*as s from"rpub.plugins.admin.new-user-page";import*as g from"rpub.plugins.admin.plugins-page";import*as m from"rpub.plugins.admin.settings-page";import*as p from"rpub.plugins.admin.themes-page";import*as d from"rpub.plugins.admin.users-page";import*as t from"rpub.plugins.content-types.admin";var o=function(l){return r.add_page.call(null,a.merge.call(null,l,u.config)),r.add_page.call(null,a.merge.call(null,l,m.config)),r.add_page.call(null,a.merge.call(null,l,d.config)),r.add_page.call(null,a.merge.call(null,l,s.config)),r.add_page.call(null,a.merge.call(null,l,p.config)),r.add_page.call(null,a.merge.call(null,l,g.config))},f=(()=>{const l=function(_){const n=a.array.call(null),c=a.alength.call(null,arguments);let e=0;for(;;){if(e<c){n.push(arguments[e]),e=e+1;continue}break}const i=0<a.alength.call(null,n)?new a.IndexedSeq(n.slice(0),0,null):null;return l.cljs$core$IFn$_invoke$arity$variadic(i)};return l.cljs$core$IFn$_invoke$arity$variadic=function(_){const n=_,e=a.__destructure_map.call(null,n);return o.call(null,e),t.add_elements.call(null,e),t.add_pages.call(null,e)},l.cljs$lang$maxFixedArity=0,l.cljs$lang$applyTo=function(_){return this.cljs$core$IFn$_invoke$arity$variadic(a.seq.call(null,_))},l})();export{o as add_pages,f as start_BANG_};
