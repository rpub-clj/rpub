import*as a from"cherry-cljs/cljs.core.js";import"preact/devtools";import*as i from"rpub.plugins.admin.all-themes-page";import*as s from"rpub.plugins.admin.dashboard-page";import*as n from"rpub.plugins.admin.helpers";import*as g from"rpub.plugins.admin.new-user-page";import*as m from"rpub.plugins.admin.plugins-page";import*as p from"rpub.plugins.admin.settings-page";import*as d from"rpub.plugins.admin.single-theme-page";import*as f from"rpub.plugins.admin.users-page";import*as t from"rpub.plugins.content-types.admin";var o=function(l){return n.add_page.call(null,a.merge.call(null,l,s.config)),n.add_page.call(null,a.merge.call(null,l,p.config)),n.add_page.call(null,a.merge.call(null,l,f.config)),n.add_page.call(null,a.merge.call(null,l,g.config)),n.add_page.call(null,a.merge.call(null,l,i.config)),n.add_page.call(null,a.merge.call(null,l,d.config)),n.add_page.call(null,a.merge.call(null,l,m.config))},$=(()=>{const l=function(_){const r=a.array.call(null),c=a.alength.call(null,arguments);let e=0;for(;;){if(e<c){r.push(arguments[e]),e=e+1;continue}break}const u=0<a.alength.call(null,r)?new a.IndexedSeq(r.slice(0),0,null):null;return l.cljs$core$IFn$_invoke$arity$variadic(u)};return l.cljs$core$IFn$_invoke$arity$variadic=function(_){const r=_,e=a.__destructure_map.call(null,r);return o.call(null,e),t.add_elements.call(null,e),t.add_pages.call(null,e)},l.cljs$lang$maxFixedArity=0,l.cljs$lang$applyTo=function(_){return this.cljs$core$IFn$_invoke$arity$variadic(a.seq.call(null,_))},l})();export{o as add_pages,$ as start_BANG_};
